<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_Search.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAuJAAALiQE3ycutAAAAB3RJ
        TUUH4wICByMSxJJIywAABDdJREFUSEullmuo5VMYh/c+B0UuJeSSEmEoJj4Mo4hEmpKU5OxzZj6gJpFS
        IiWJkmhK8oGZc84Un5Qm+WCUS41LJCQTwnxwjTnnjPu4355n/ddv7/8+M+fMmbHq2Wvt913v+671rvVf
        a3VSxqdm24xUOr2pGesVcDc8C+/Dp/AxvAKPwBVwMGjbhdHe5EynN9n4W7BUgzA6Pl2MDXg1vAl/w78L
        8E+tPwcHdzg0fppBFL+7lCgq+9X6ZHgV2o73RPrNwFWgn4WDRwgJein8ADr5vdY6fQfWwfWg4wm4EzbD
        z2C/P+Cv2r4P9Gfwztj6r0ucfmkrwaAaGyhBXdcV1zz2TWdiuvRp22U2x8ID8Btoa63tg6B+dGxye7Fh
        zxR7/5RNBKfADtDAUTuA60CdAcSszEf7DOBM+Aj0keBrQV0m1w8co+fBjn+CQVeB8v2hbzQEGehtmLFt
        cPvZPhLeA305+x/BSaVfP7C4ZnZMejPKA2pdqWlqlWF9yYC1gb6FbLgnQPlg1rXxEthBXNOhTrJYafeD
        zPxG0J+fomlfBsqbWfNzFmSmchEoL4eA7aWUaiPdancgfALxewcoL1mxcStEuRWjkVXrtsVJdbu0EhtI
        yu+H+H6hyvozfhKifFQhFMOeHfayVPss02UQ31/AQaC8688bEOUtoKxJxz6Ual9mBadCDpRf4Hgoen+2
        QgJfC8r2ObAF2wQ+DnaCvh1A/7Py5y1IYHfi/wpc7RP4RPBM0Lc7+wQoen+egQT2LFbWbA6utb0t1T5r
        fAHE93Y4DJSXNb4HonwNiqLW1d3SSmygGfjU7O0Q369XWfFt40KI0nU4A5QnXdXt4iWXfqU7Mb3Dur1x
        vUSUNcuIgY13IR3Wq4CcQIXFSg6aSmZ7OWQy1itBeVmGdL4ZVGYjXAzK9xi8rYeROohD4APQl7wIygdL
        WBt+2B9COn4JJ4E6g/cNCvVunYcz7a7eWFL8FOgnE3E5lZfZ9qa5bPIHLoF258/gbFDneutYbAdtI7Of
        D75NoL0HhvVDoG44e7WR4J5cdvbS8Er7Fe6CQ0F9d5xUpihbwwxJrxnxpbkN2kE311dqYzsYYGPc21BS
        l+C3gUZ5hdj2G/Qc995eDh4Mp4FZcmC5+LXJTfccA3KWptlP1v79OCVwi+zIK2EW4iwXevCVMv/Jm90r
        OYjOb8m+g/OgxOmnrEWCHwUPw0+g4fzg81Hv1XfOOJuHWm4CdXmF+no9F0rcUvzjp7D28Z22TUfW42i4
        AZ4GL/bvwbV3QO7+LXAvLJ+YnutMTM1pk43k69OHvkGzBD4oV9awTUHQpuzazqaBnPvZbBwBXm/HgK+M
        XWxabWvX9iswaF6eb9eQgzI2SFNwNxpwdM3Guc5qZtXSiQHan1SbDML3VmYuW2q43Rcf33Rq4yDyWYjt
        oT67scueOR1eBvbB7LL/AP39aSgZXHYGAAAAAElFTkSuQmCC
</value>
  </data>
</root>